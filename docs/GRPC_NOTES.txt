..........................................
 'first'     | 'second'    | 'third'     |
.............|.............|.............|
 gRPC Client | gRPC Server |             |
             | gRPC Client | gRPC Server |
..........................................
CURL <--> 'first' <--> 'second' <--> 'third'
--------------------------------------------------------------------------
<a href="https://protobuf.dev/support/version-support/#java">Protocol Buffers Version Support - Java</a>

The gRPC uses the HTTP/2 network protocol.
The HTTP/2 network protocol supports streams.
In chat service it is implemented bidirectional streaming RPC,
where both sides send a sequence of messages using a read-write stream.

The Protocol Buffers are language-neutral, platform-neutral extensible mechanisms
for serializing structured data.
The gRPC API is based on Protocol Buffers, which provides a protoc compiler to generate code.
The Java code is generated from a protobuf file.
The Google Protocol Buffer (protobuf) is a binary data format.
--------------------------------------------------------------------------
Spring Tips - gRPC
https://spring.io/blog/2024/04/17/spring-tips-grpc
    ^^^ gitHub code for this: https://github.com/spring-tips/grpc
--------------------------------------------------------------------------
gRPC documentation:

https://grpc.io/docs/languages/java/
https://grpc.io/docs/languages/java/basics/
--------------------------------------------------------------------------
gRPC Spring Boot Starter
Documentation
  https://grpc-ecosystem.github.io/grpc-spring/en/
GitHub
  https://github.com/grpc-ecosystem/grpc-spring
    ^ this GitHub was transferred from older: https://github.com/yidongnan/grpc-spring-boot-starter
--------------------------------------------------------------------------
gRPC Examples
https://github.com/grpc/grpc-java/blob/master/examples/README.md
--------------------------------------------------------------------------
https://www.baeldung.com/spring-boot-grpc
https://www.baeldung.com/grpc-introduction
https://www.baeldung.com/spring-rest-api-with-protocol-buffers
https://www.baeldung.com/google-protocol-buffer
--------------------------------------------------------------------------
https://www.wallarm.com/what/grpc-vs-rest-comparing-key-api-designs-and-deciding-which-one-is-best
https://www.wallarm.com/what/the-concept-of-grpc
https://www.techtarget.com/searchapparchitecture/definition/gRPC
--------------------------------------------------------------------------
Tool 'grpcurl' (here is the Docker script for that tool):
    https://github.com/fullstorydev/grpcurl?tab=readme-ov-file
###############################################################################
Tried to do dependency replacement from 'javax' to 'jakarta':
Now it is used here in 'pom.xml':
<dependency>
    <groupId>javax.annotation</groupId>
    <artifactId>javax.annotation-api</artifactId>
    <version>1.3.2</version>
</dependency>

Tried to replace it with 'jakarta' dependency.
BUT IT FAILED !!!
<dependency>
     <!-- Java 9+ compatibility - Do NOT update to 2.0.0 -->
     <groupId>jakarta.annotation</groupId>
     <artifactId>jakarta.annotation-api</artifactId>
     <version>1.3.5</version>
     <optional>true</optional>
</dependency>

'jakarta.annotation' dependency for comparing.
This is the current jakarta version:
<dependency>
    <groupId>jakarta.annotation</groupId>
    <artifactId>jakarta.annotation-api</artifactId>
    <version>3.0.0</version>
</dependency>
###############################################################################